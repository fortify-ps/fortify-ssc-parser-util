plugins {
    id 'maven-publish'
    id 'java-library'
    id 'com.jfrog.bintray' version "1.8.4"
    id 'com.jfrog.artifactory' version "4.10.0"
    id 'org.ajoberstar.grgit' version "4.0.0"
}

ext {
	gradleHelpersLocation = "https://raw.githubusercontent.com/fortify-ps/gradle-helpers/1.0"
	
	dependencyVersion=[
		fortify_plugin_api:  '1.0.1',
		slf4j:               '1.7.21',
		jackson:             '2.8.4',
		commons_lang3:       '3.9',
		commons_codec:       '1.14',
		commons_io:          '2.6'
	]
}

apply from: "${gradleHelpersLocation}/version-helper.gradle"
apply from: "${gradleHelpersLocation}/upload-mvn-helper.gradle"
apply from: "${gradleHelpersLocation}/fortify-helper.gradle"

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = getProjectVersion()
group = 'com.fortify.ssc.parser.util'

repositories {
    // repository with fortify artifacts
    maven {
        url  "http://dl.bintray.com/fortify/maven-public"
    }
    mavenCentral()
}

description = 'Utility classes for developing Fortify SSC parser plugins'

test {
    useJUnitPlatform()
}

dependencies {
    // dependencies provided by plugin runtime
    compileOnly "com.fortify.plugin:plugin-api:${dependencyVersion.fortify_plugin_api}"
    compileOnly "org.slf4j:slf4j-api:${dependencyVersion.slf4j}"

    // plugin specific dependencies
    compile(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${dependencyVersion.jackson}") { transitive = false }
    compile(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${dependencyVersion.jackson}") { transitive = false }
    compile(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${dependencyVersion.jackson}") { transitive = false }
    compile(group: 'org.apache.commons', name: 'commons-lang3', version: "${dependencyVersion.commons_lang3}") { transitive = false }
    compile(group: 'commons-codec', name: 'commons-codec', version: "${dependencyVersion.commons_codec}") { transitive = false }
    compile(group: 'commons-io', name: 'commons-io', version: "${dependencyVersion.commons_io}") { transitive = false }
    
    //testImplementation 'org.junit.platform:junit-jupiter-api:5.3.1'
    
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1')
    testImplementation(group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.1.0")
    testRuntimeOnly(group: 'org.junit.jupiter', name:'junit-jupiter-engine', version: '5.3.1')
    testRuntimeOnly(group: 'org.slf4j', name: 'slf4j-simple', version: "${dependencyVersion.slf4j}")
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task myjavadoc(type: Javadoc) {
	source = sourceSets.main.allJava
	classpath = sourceSets.main.compileClasspath
	failOnError = false
}

task javadocJar(type: Jar) {
    from myjavadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	from components.java
	        artifact sourcesJar
	        artifact javadocJar
            pom {
            	version = project.version
                name = project.name
                afterEvaluate {
                	description = project.description
                }
                url = 'https://github.com/fortify-ps/fortify-client-api'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'rsenden'
                        name = 'Ruud Senden'
                        email = 'ruud.senden@microfocus.com'
                    }
                }
                scm {
                    developerConnection = "scm:git:https://github.com/fortify-ps/${rootProject.name}.git"
                }
            }
        }
    }
}
// Publish to Maven local repository when publish task is executed
publish.finalizedBy publishToMavenLocal


