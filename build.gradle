plugins {
    id 'maven-publish'
	id 'base'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.jfrog.bintray' version "1.8.4"
    id 'com.jfrog.artifactory' version "4.10.0"
    id 'org.ajoberstar.grgit' version "4.0.0"
}

ext {
	gradleHelpersLocation = "https://raw.githubusercontent.com/fortify-ps/gradle-helpers/1.0"
}

apply from: "${gradleHelpersLocation}/version-helper.gradle"
apply from: "${gradleHelpersLocation}/upload-mvn-helper.gradle"
apply from: "${gradleHelpersLocation}/fortify-helper.gradle"

description = 'Utility classes for developing Fortify SSC parser plugins'

allprojects {
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'io.spring.dependency-management'
	
	group = 'com.fortify.ssc.parser.util'
	version = getProjectVersion()
	
	ext {
		dependencyVersion=[
			fortify_plugin_api:  '1.0.1',
			slf4j:               '1.7.21',
			jackson:             '2.8.4',
			commons_lang3:       '3.9',
			commons_codec:       '1.14',
			commons_io:          '2.6',
			woodstox:            '6.2.1'
		]
	}

	dependencyManagement {
		dependencies {
			dependencySet(group:"${project.group}", version: "${project.version}") {
				entry 'fortify-ssc-parser-util-common'
				entry 'fortify-ssc-parser-util-json'
				entry 'fortify-ssc-parser-util-xml'
			}
		
			// dependencies provided by plugin runtime
			dependency "com.fortify.plugin:plugin-api:${dependencyVersion.fortify_plugin_api}"
			dependency "org.slf4j:slf4j-api:${dependencyVersion.slf4j}"
			
			dependencySet(group:'com.fasterxml.jackson.core', version: "${dependencyVersion.jackson}") {
				entry 'jackson-core'
				entry 'jackson-annotations'
				entry 'jackson-databind'
			}
			dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${dependencyVersion.jackson}"
			dependency "com.fasterxml.woodstox:woodstox-core:${dependencyVersion.woodstox}"
			
			dependency "org.apache.commons:commons-lang3:${dependencyVersion.commons_lang3}"
			dependency "commons-codec:commons-codec:${dependencyVersion.commons_codec}"
			dependency "commons-io:commons-io:${dependencyVersion.commons_io}"
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				pom {
					version = project.version
					name = project.name
					afterEvaluate {
						description = project.description
					}
					url = 'https://github.com/fortify-ps/fortify-ssc-parser-util'
					licenses {
						license {
							name = 'MIT License'
							url = 'https://opensource.org/licenses/MIT'
						}
					}
					developers {
						developer {
							id = 'rsenden'
							name = 'Ruud Senden'
							email = 'ruud.senden@microfocus.com'
						}
					}
					scm {
						developerConnection = "scm:git:https://github.com/fortify-ps/${rootProject.name}.git"
					}
				}
			}
		}
	}
	// Publish to Maven local repository when publish task is executed
	publish.finalizedBy publishToMavenLocal
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
	
	repositories {
		// repository with fortify artifacts
		maven {
			url  "http://dl.bintray.com/fortify/maven-public"
		}
		mavenCentral()
	}

	dependencies {
		// dependencies provided by plugin runtime
		compileOnly "com.fortify.plugin:plugin-api"
		compileOnly "org.slf4j:slf4j-api"
	}
	
	task sourcesJar(type: Jar) {
		from sourceSets.main.allJava
		archiveClassifier = 'sources'
	}

	task myjavadoc(type: Javadoc) {
		source = sourceSets.main.allJava
		classpath = sourceSets.main.compileClasspath
		failOnError = false
	}

	task javadocJar(type: Jar) {
		from myjavadoc
		archiveClassifier = 'javadoc'
	}
	
	publishing {
	    publications {
	        mavenJava(MavenPublication) {
	            from components.java
	            artifact sourcesJar
	            artifact javadocJar
	        }
	    }
	}
}



